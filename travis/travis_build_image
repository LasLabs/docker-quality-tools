#!/usr/bin/env python
#
# Copyright 2016 LasLabs Inc.
# License Apache 2.0 (https://www.apache.org/licenses/LICENSE-2.0.html).

import logging
import os
import subprocess

import coloredlogs

from datetime import datetime

coloredlogs.install(level='DEBUG')
logging.basicConfig(format='%(levelname)s: %(message)s',
                    level=logging.DEBUG)

build_dir = os.environ.get('TRAVIS_BUILD_DIR', os.path.dirname(__file__))
docker_repo = os.environ.get('DOCKER_REPO', 'laslabs/docker-test')
docker_tag = os.environ.get('DOCKER_TAG', 'latest')
build_args = os.environ.get('BUILD_ARGS', [])
docker_file = os.environ.get('DOCKERFILE', 'Dockerfile')

docker_build_dir = os.environ.get('DOCKER_DIR', '')
docker_build_dir = os.path.abspath(
    os.path.join(build_dir, docker_build_dir),
)
docker_file = os.path.join(docker_build_dir, docker_file)

if build_args:
    build_args = build_args.split(',')

build_args = [arg.strip() for arg in build_args]

build_args.extend([
    'VCS_REF=%s' % os.environ.get('TRAVIS_COMMIT', 'No VCS'),
    'BUILD_DATE=%s' % datetime.now().strftime('%Y-%m-%dT%H:%M:%SZ'),
    'VERSION=%s' % docker_tag,
])

cmd = [
    'docker', 'build',
    '--file=%s' % docker_file,
    '--tag=%s:%s' % (docker_repo, docker_tag),
]

for arg in build_args:
    cmd.extend(('--build-arg', arg))

cmd.append(docker_build_dir)

logging.debug('Building with command %s', cmd)

process = subprocess.Popen(
  cmd, stdout=subprocess.PIPE, env=os.environ.copy(),
)

while True:
    output = process.stdout.readline()
    if output == '' and process.poll() is not None:
        break
    if output:
        logging.debug(output.strip())
    rc = process.poll()

exit(process.returncode)
